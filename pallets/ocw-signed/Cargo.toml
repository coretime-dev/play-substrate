[package]
authors = ['Anonymous']
description = 'FRAME pallet offchain worker send signed transaction'
edition = '2021'
homepage = 'https://substrate.dev'
license = 'Unlicense'
name = 'pallet-ocw-signed'
repository = 'https://github.com/paritytech/substrate/'
version = '4.0.0'

[package.metadata.docs.rs]
targets = ['x86_64-unknown-linux-gnu']

[dependencies]
alt_serde = { version = "1", default-features = false, features = ["derive"] }
# updated to `alt_serde_json` when latest version supporting feature `alloc` is released
serde_json = { version = "1", default-features = false, git = "https://github.com/Xanewok/json", branch = "no-std", features = ["alloc"] }

[dependencies.codec]
default-features = false
features = ['derive']
package = 'parity-scale-codec'
version = '1.3.0'

[dependencies.serde]
version = "1.0.101"
optional = true

[dependencies.frame-support]
default-features = false
git = 'https://github.com/paritytech/substrate.git'
tag = 'v2.0.0-rc6'
version = '2.0.0-rc6'

[dependencies.frame-system]
default-features = false
git = 'https://github.com/paritytech/substrate.git'
tag = 'v2.0.0-rc6'
version = '2.0.0-rc6'

[dependencies.sp-std]
default-features = false
git = 'https://github.com/paritytech/substrate.git'
tag = 'v2.0.0-rc6'
version = '2.0.0-rc6'

[dependencies.sp-runtime]
default-features = false
git = 'https://github.com/paritytech/substrate.git'
tag = 'v2.0.0-rc6'
version = '2.0.0-rc6'

[dependencies.sp-io]
default-features = false
git = 'https://github.com/paritytech/substrate.git'
tag = 'v2.0.0-rc6'
version = '2.0.0-rc6'

[dependencies.sp-core]
default-features = false
git = 'https://github.com/paritytech/substrate.git'
tag = 'v2.0.0-rc6'
version = '2.0.0-rc6'

[dependencies.sp-application-crypto]
default-features = false
git = 'https://github.com/paritytech/substrate.git'
tag = 'v2.0.0-rc6'
version = '2.0.0-rc6'

[features]
default = ['std']
std = [
    'serde',
    'codec/std',
    'frame-support/std',
    'frame-system/std',
    'sp-io/std',
    'sp-runtime/std',
    'sp-std/std',
    'sp-core/std',
]
